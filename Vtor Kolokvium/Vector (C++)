/*


Двајца студенти од ФИНКИ, Тони и Александра имаат потреба да направат програма поврзана со предметот Линеарна Алгебра. Тие макотрпно работат на проектот, но сфаќаат дека и покрај вложениот труд нема да можат да завршат во предвидениот рок. Случајно ве среќаваат вас и вие се согласувате да им помогнете во проектот. Задачата со којашто ве задолжиле е следна:

Дефинирајте класа MyVector којашто би претставувала n-димензионален вектор составен само од цели броеви и затоа потребни ви се:

    статичка низа од цели броеви со максимум 15 елементи
    моментален број на елементи во низата

За потребите на класата дефинирајте default конструктор и конструктор со два аргументи(низата и број на елементи на низата).

Тони и Александра веќе дефинирале што треба да содржи класата која ќе ја имплементирате, па вие ги добивате следниве задолженија:

    Преоптоварување на операторот за читање >> (0.5 поени)
        Најпрво треба да се вчита бројот на елементи кои ќе ги содржи низата, а потоа се вчитуваат и елементите
    Преоптоварување на операторот за печатење << (0.5 поени)
        Форматот на печатење е: <element1,element2, ... ,elementN>
    Преоптоварување на операторот -= (0.5 поени)
        Операторот прима објект од класата MyVector кој содржи ист број на елементи како и објектот кој го повикува операторот и неговата функција е секој член од векторот кој го повикува операторот да се намали соодветно за членот од векторот аргумент.
            Пример А = <5,3,2>, B = <1,2,3>, (A -= B) = <4,1,-1>
    Преоптоварување на операторот * (0.5 поени)
        Операторот прима објект од класата MyVector и враќа скаларен производ на двата вектори (цел број). Скаларниот производ на два вектори се пресметува на следниот начин: x = <x1,x2,x3>, y = <y1,y2,y3>, x * y = x1 * y1 + x2 * y2 + x3 * y3
    Преоптоварување на операторот <= (0.5 поени)
        Операторот прима објект од класата MyVector и ги споредува двата објекти. Споредбата се прави според збирот на елементите во низата. Забелешка: Не мора двата објекти да имаат ист број на елементи.
    Преоптоварување на операторот [] (0.5 поени)
        Операторот прима цел број - i како аргумент и потребно е да го врати i-тиот елемент од низата. Во случај да не постои тој елемент, потребно е да се испечати “Index out of bounds” и да се врати вредност -1.
    Преоптоварување на префиксен оператор -- (0.5 поени)
        Целта на овој оператор е да ги декрементира сите елементи на низата кои се позитивни
    Преоптоварување на постфиксен оператор ++ (0.5 поени)
        Целта на овој оператор е да ги инкрементира сите елементи на низата кои се негативни

*/

#include <iostream>
#include <cstring>

using namespace std;

class MyVector{
private:
    int niza[15];
    int n;
public:
    MyVector(){}
    MyVector(int *niza, int n){
    	this->n = n;
        for(int i = 0; i < n; i++)
            this->niza[i] = niza[i];
    }
    
    // copy constr
    MyVector(const MyVector &mv){
    	this->n = mv.n;
        for(int i = 0; i < this->n; i++)
            this->niza[i] = mv.niza[i];
    }
    
    // overload >>
    friend istream &operator>>(istream &ist, MyVector &mv){
    	ist >> mv.n;
        for(int i = 0; i < mv.n; i++)
            ist >> mv.niza[i];
        return ist;
    }
    
    // overload <<
    friend ostream &operator<<(ostream &out, const MyVector &mv){
    	out << "<";
        for(int i = 0; i < mv.n - 1; i++)
            out << mv.niza[i] << ",";
        out << mv.niza[mv.n - 1] << ">" << endl;
        return out;
    }
    
    // overload -=
    MyVector operator-=(const MyVector &mv){
        for(int i = 0; i < n; i++)
            niza[i] = niza[i] - mv.niza[i];
        return MyVector(niza, n);
    }
    
    // overload *
    int operator*(const MyVector &mv){
    	int total = 0;
        for(int i = 0; i < n; i++)
            total = total + ( niza[i] * mv.niza[i]);
        return total;
    }
    
    // overload <=
    bool operator<=(const MyVector &mv){
        int zbir1 = 0, zbir2 = 0;
        for(int i = 0; i < n; i++)
            zbir1 += niza[i];
        for(int i = 0; i < mv.n; i++)
            zbir2 += mv.niza[i];
        return (zbir1 == zbir2);
    }
    
    // overload []
    int operator[](int i){
        if(i >= n || i < 0){
        	cout << "Index out of bounds" << endl;
            return -1;
        }
        return niza[i];
    }
    
    // prefix --
    MyVector &operator--(){
        for(int i = 0; i < n; i++){
        	if(niza[i] > 0)
                niza[i]--;
        }
        return *this;
    }
    
    // postfix ++
    MyVector &operator++(int){
    	MyVector temp(*this);
        for(int i = 0; i < n; i++){
        	if(niza[i] < 0)
                niza[i]++;
        }
        return temp;
    }
};

int main() {
int n;

cin >> n;
if (n == 1) {
  cout << "Testiranje na operatorite >> i <<" << endl;
  cout << "==============================\n";
  MyVector a;
  MyVector b;
  cin >> a;
  cin >> b;
  cout << a;
  cout << b;
}
else if (n == 2) {
  cout << "Testiranje na operatorot -="<< endl;
  cout << "==============================\n";
  int m;
  int niza[15];
  cin >> m;
  for (int i=0; i < m; ++i){
    cin >> niza[i];
  }
  MyVector a(niza,m);
  for (int i=0; i < m; ++i) {
    cin >> niza[i];
  }
  MyVector b(niza,m);
  a -= b;
  cout << a;
}
else if (n == 3) {
  cout << "Testiranje na operatorot *"<< endl;
  cout << "==============================\n";
  int m;
  int niza[15];
  cin >> m;
  for (int i=0; i < m; ++i){
    cin >> niza[i];
  }
  MyVector a(niza,m);
  for (int i=0; i < m; ++i) {
    cin >> niza[i];
  }
  MyVector b(niza,m);
  cout << a * b;
}
else if (n == 4){
  cout << "Testiranje na operatorot <="<< endl;
  cout << "==============================\n";
  int m;
  int l;
  int niza[15];
  cin >> m;
  for (int i=0; i < m; ++i){
    cin >> niza[i];
  }
  MyVector a(niza,m);
  cin >> l;
  for (int i=0; i < l; ++i) {
    cin >> niza[i];
  }
  MyVector b(niza,l);
  cout << (a <= b);
}
else if (n == 5){
  cout << "Testiranje na operatorot []"<< endl;
  cout << "==============================\n";
  int m;
  int niza[15];
  cin >> m;
  for (int i=0; i < m; ++i){
    cin >> niza[i];
  }
  MyVector a(niza,m);
  for (int i=0; i < m; ++i) {
    cin >> niza[i];
  }
  MyVector b(niza,m);
  cout << a[2];
  cout << endl;
  cout << b[3];
}
else if (n == 6) {
  cout << "Testiranje na operatorot --"<< endl;
  cout << "==============================\n";
  int m;
  int niza[15];
  cin >> m;
  for (int i=0; i < m; ++i){
    cin >> niza[i];
  }
  MyVector a(niza,m);
  --a;
  cout << a;
}
else if (n == 7) {
  cout << "Testiranje na operatorot ++"<< endl;
  cout << "==============================\n";
  int m;
  int niza[15];
  cin >> m;
  for (int i=0; i < m; ++i){
    cin >> niza[i];
  }
  MyVector a(niza,m);
  MyVector b = a++;
  cout << a;
  cout << b;
}
}
